{:use-macros {go cljs.core.async.macros}, :excludes #{}, :name game.assets, :imports nil, :requires {hipo hipo.core, hipo.core hipo.core, cljs.core.async cljs.core.async, dommy dommy.core, dommy.core dommy.core, http cljs-http.client, cljs-http.client cljs-http.client}, :uses {<! cljs.core.async, take! cljs.core.async}, :defs {get-sprite {:protocol-inline nil, :meta {:file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/assets.cljs", :line 123, :column 7, :end-line 123, :end-column 17, :arglists (quote ([id]))}, :name game.assets/get-sprite, :variadic false, :file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/assets.cljs", :end-column 17, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 123, :end-line 123, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, load-asset {:protocol-inline nil, :meta {:file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/assets.cljs", :line 88, :column 7, :end-line 88, :end-column 17, :arglists (quote ([{:keys [type-key id url]}]))}, :name game.assets/load-asset, :variadic false, :file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/assets.cljs", :end-column 17, :method-params ([p__9074]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 88, :end-line 88, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [type-key id url]}]))}, load-atlas {:protocol-inline nil, :meta {:file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/assets.cljs", :line 50, :column 7, :end-line 50, :end-column 17, :arglists (quote ([id url]))}, :name game.assets/load-atlas, :variadic false, :file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/assets.cljs", :end-column 17, :method-params ([id url]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 50, :end-line 50, :max-fixed-arity 2, :fn-var true, :arglists (quote ([id url]))}, asset-error! {:protocol-inline nil, :meta {:file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/assets.cljs", :line 33, :column 7, :end-line 33, :end-column 19, :arglists (quote ([type-key id]))}, :name game.assets/asset-error!, :variadic false, :file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/assets.cljs", :end-column 19, :method-params ([type-key id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 2, :fn-var true, :arglists (quote ([type-key id]))}, load-sound {:protocol-inline nil, :meta {:file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/assets.cljs", :line 60, :column 7, :end-line 60, :end-column 17, :arglists (quote ([id url]))}, :name game.assets/load-sound, :variadic false, :file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/assets.cljs", :end-column 17, :method-params ([id url]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 60, :end-line 60, :max-fixed-arity 2, :fn-var true, :arglists (quote ([id url]))}, Howl {:name game.assets/Howl, :file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/assets.cljs", :line 11, :column 1, :end-line 11, :end-column 14, :meta {:file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/assets.cljs", :line 11, :column 10, :end-line 11, :end-column 14}}, ready? {:protocol-inline nil, :meta {:file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/assets.cljs", :line 30, :column 7, :end-line 30, :end-column 13, :arglists (quote ([]))}, :name game.assets/ready?, :variadic false, :file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/assets.cljs", :end-column 13, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 30, :end-line 30, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, percent-done {:protocol-inline nil, :meta {:file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/assets.cljs", :line 22, :column 7, :end-line 22, :end-column 19, :arglists (quote ([]))}, :name game.assets/percent-done, :variadic false, :file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/assets.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, load {:protocol-inline nil, :meta {:file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/assets.cljs", :line 96, :column 7, :end-line 96, :end-column 11, :arglists (quote ([]))}, :name game.assets/load, :variadic false, :file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/assets.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 96, :end-line 96, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, get-tex {:protocol-inline nil, :meta {:file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/assets.cljs", :line 114, :column 7, :end-line 114, :end-column 14, :arglists (quote ([id] [atl id])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([id] [atl id]), :arglists ([id] [atl id]), :arglists-meta (nil nil)}}, :name game.assets/get-tex, :variadic false, :file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/assets.cljs", :end-column 14, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([id] [atl id]), :arglists ([id] [atl id]), :arglists-meta (nil nil)}, :method-params ([id] [atl id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 114, :end-line 114, :max-fixed-arity 2, :fn-var true, :arglists ([id] [atl id])}, request {:protocol-inline nil, :meta {:file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/assets.cljs", :line 37, :column 7, :end-line 37, :end-column 14, :arglists (quote ([type-key id url]))}, :name game.assets/request, :variadic false, :file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/assets.cljs", :end-column 14, :method-params ([type-key id url]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 37, :end-line 37, :max-fixed-arity 3, :fn-var true, :arglists (quote ([type-key id url]))}, play-sound {:protocol-inline nil, :meta {:file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/assets.cljs", :line 135, :column 7, :end-line 135, :end-column 17, :arglists (quote ([id]))}, :name game.assets/play-sound, :variadic false, :file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/assets.cljs", :end-column 17, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 135, :end-line 135, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, get-asset {:protocol-inline nil, :meta {:file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/assets.cljs", :line 109, :column 7, :end-line 109, :end-column 16, :arglists (quote ([type-key id]))}, :name game.assets/get-asset, :variadic false, :file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/assets.cljs", :end-column 16, :method-params ([type-key id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 109, :end-line 109, :max-fixed-arity 2, :fn-var true, :arglists (quote ([type-key id]))}, assets {:name game.assets/assets, :file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/assets.cljs", :line 13, :column 1, :end-line 13, :end-column 16, :meta {:file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/assets.cljs", :line 13, :column 10, :end-line 13, :end-column 16}}, request-all {:protocol-inline nil, :meta {:file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/assets.cljs", :line 100, :column 7, :end-line 100, :end-column 18, :arglists (quote ([reqmap]))}, :name game.assets/request-all, :variadic false, :file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/assets.cljs", :end-column 18, :method-params ([reqmap]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 100, :end-line 100, :max-fixed-arity 1, :fn-var true, :arglists (quote ([reqmap]))}, load-img {:protocol-inline nil, :meta {:file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/assets.cljs", :line 40, :column 7, :end-line 40, :end-column 15, :arglists (quote ([id url]))}, :name game.assets/load-img, :variadic false, :file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/assets.cljs", :end-column 15, :method-params ([id url]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 40, :end-line 40, :max-fixed-arity 2, :fn-var true, :arglists (quote ([id url]))}, pixi {:name game.assets/pixi, :file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/assets.cljs", :line 10, :column 1, :end-line 10, :end-column 14, :meta {:file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/assets.cljs", :line 10, :column 10, :end-line 10, :end-column 14}}, count-loaded {:protocol-inline nil, :meta {:file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/assets.cljs", :line 18, :column 7, :end-line 18, :end-column 19, :arglists (quote ([]))}, :name game.assets/count-loaded, :variadic false, :file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/assets.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 18, :end-line 18, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, count-requested {:protocol-inline nil, :meta {:file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/assets.cljs", :line 15, :column 7, :end-line 15, :end-column 22, :arglists (quote ([]))}, :name game.assets/count-requested, :variadic false, :file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/assets.cljs", :end-column 22, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, url-list {:name game.assets/url-list, :file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/assets.cljs", :line 12, :column 1, :end-line 12, :end-column 18, :meta {:file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/assets.cljs", :line 12, :column 10, :end-line 12, :end-column 18}}}, :require-macros {cljs.core.async.macros cljs.core.async.macros, hipo hipo.core, hipo.core hipo.core, dommy dommy.core, dommy.core dommy.core}, :cljs.analyzer/constants {:seen #{:ready :atl :type-ke :snd :src :type-key :id :url :img :data}, :order [:img :snd :atl :ready :type-key :id :url :data :src :type-ke]}, :doc nil}