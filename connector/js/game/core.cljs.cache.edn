{:use-macros {go cljs.core.async.macros, go-loop cljs.core.async.macros}, :excludes #{}, :name game.core, :imports nil, :requires {play game.play, game.statemachine game.statemachine, dommy dommy.core, game.loading game.loading, game.assets game.assets, cljs.core.async cljs.core.async, chans game.chans, start game.startscreen, game.chans game.chans, state game.statemachine, game.startscreen game.startscreen, dommy.core dommy.core, game.play game.play, loading game.loading}, :uses {<! cljs.core.async, load game.assets, request-all game.assets, >! cljs.core.async}, :defs {init {:protocol-inline nil, :meta {:file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/core.cljs", :line 18, :column 7, :end-line 18, :end-column 11, :arglists (quote ([]))}, :name game.core/init, :variadic false, :file "src-cljs/game/core.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 18, :end-line 18, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, tick {:protocol-inline nil, :meta {:file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/core.cljs", :line 33, :column 7, :end-line 33, :end-column 11, :arglists (quote ([]))}, :name game.core/tick, :variadic false, :file "src-cljs/game/core.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {cljs.core.async.macros cljs.core.async.macros, dommy dommy.core, dommy.core dommy.core}, :cljs.analyzer/constants {:seen #{:tick :cur-state :click1 :else :hex-dark :atl :ortho-orange :recur :snd :level :loading :click2 :id :url :click3 :hex-green :play :ortho-grey}, :order [:atl :snd :id :url :hex-dark :hex-green :ortho-grey :ortho-orange :click1 :click2 :click3 :level :loading :play :cur-state :tick :recur :else]}, :doc nil}