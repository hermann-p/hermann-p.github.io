{:use-macros {go cljs.core.async.macros}, :excludes #{}, :name game.play, :imports nil, :requires {t cognitect.transit, hipo.core hipo.core, hipo hipo.core, dommy dommy.core, cljs-http.client cljs-http.client, game.assets game.assets, cljs.core.async cljs.core.async, assets game.assets, cognitect.transit cognitect.transit, clojure.set clojure.set, chans game.chans, game.chans game.chans, dommy.core dommy.core, game.pixi game.pixi, graphics game.pixi, http cljs-http.client}, :uses {union clojure.set, <! cljs.core.async, >! cljs.core.async, difference clojure.set}, :defs {pixel->tile {:name game.play/pixel->tile, :file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/play.cljs", :line 77, :column 1, :end-line 77, :end-column 22, :meta {:file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/play.cljs", :line 77, :column 11, :end-line 77, :end-column 22}}, screen-mode {:protocol-inline nil, :meta {:file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/play.cljs", :line 176, :column 7, :end-line 176, :end-column 18, :arglists (quote ([_]))}, :name game.play/screen-mode, :variadic false, :file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/play.cljs", :end-column 18, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 176, :end-line 176, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_]))}, time-tick {:protocol-inline nil, :meta {:file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/play.cljs", :line 214, :column 7, :end-line 214, :end-column 16, :arglists (quote ([state]))}, :name game.play/time-tick, :variadic false, :file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/play.cljs", :end-column 16, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 214, :end-line 214, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, mouse-fn {:protocol-inline nil, :meta {:file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/play.cljs", :line 26, :column 7, :end-line 26, :end-column 15, :arglists (quote ([evt]))}, :name game.play/mouse-fn, :variadic false, :file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/play.cljs", :end-column 15, :method-params ([evt]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 26, :end-line 26, :max-fixed-arity 1, :fn-var true, :arglists (quote ([evt]))}, mk-sprites {:protocol-inline nil, :meta {:file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/play.cljs", :line 128, :column 7, :end-line 128, :end-column 17, :arglists (quote ([atlas type]))}, :name game.play/mk-sprites, :variadic false, :file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/play.cljs", :end-column 17, :method-params ([atlas type]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 128, :end-line 128, :max-fixed-arity 2, :fn-var true, :arglists (quote ([atlas type]))}, ortho-tiles {:name game.play/ortho-tiles, :file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/play.cljs", :line 15, :column 1, :end-line 15, :end-column 21, :meta {:file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/play.cljs", :line 15, :column 10, :end-line 15, :end-column 21}}, finalize-resizing {:protocol-inline nil, :meta {:file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/play.cljs", :line 171, :column 7, :end-line 171, :end-column 24, :arglists (quote ([state]))}, :name game.play/finalize-resizing, :variadic false, :file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/play.cljs", :end-column 24, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 171, :end-line 171, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, level-won? {:protocol-inline nil, :meta {:file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/play.cljs", :line 122, :column 7, :end-line 122, :end-column 17, :arglists (quote ([{:keys [tiles], :as state}]))}, :name game.play/level-won?, :variadic false, :file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/play.cljs", :end-column 17, :method-params ([p__12984]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 122, :end-line 122, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [tiles], :as state}]))}, req-action {:protocol-inline nil, :meta {:file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/play.cljs", :line 23, :column 7, :end-line 23, :end-column 17, :arglists (quote ([actn]))}, :name game.play/req-action, :variadic false, :file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/play.cljs", :end-column 17, :method-params ([actn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 1, :fn-var true, :arglists (quote ([actn]))}, connected? {:protocol-inline nil, :meta {:file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/play.cljs", :line 86, :column 7, :end-line 86, :end-column 17, :arglists (quote ([a b a-dir]))}, :name game.play/connected?, :variadic false, :file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/play.cljs", :end-column 17, :method-params ([a b a-dir]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 86, :end-line 86, :max-fixed-arity 3, :fn-var true, :arglists (quote ([a b a-dir]))}, display-connection! {:protocol-inline nil, :meta {:file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/play.cljs", :line 40, :column 7, :end-line 40, :end-column 26, :arglists (quote ([tile connected?]))}, :name game.play/display-connection!, :variadic false, :file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/play.cljs", :end-column 26, :method-params ([tile connected?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 40, :end-line 40, :max-fixed-arity 2, :fn-var true, :arglists (quote ([tile connected?]))}, init {:protocol-inline nil, :meta {:file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/play.cljs", :line 251, :column 7, :end-line 251, :end-column 11, :arglists (quote ([]))}, :name game.play/init, :variadic false, :file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/play.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 251, :end-line 251, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, show-connected! {:protocol-inline nil, :meta {:file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/play.cljs", :line 102, :column 7, :end-line 102, :end-column 22, :arglists (quote ([{:keys [tiles start], :as state}]))}, :name game.play/show-connected!, :variadic false, :file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/play.cljs", :end-column 22, :method-params ([p__12950]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 102, :end-line 102, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [tiles start], :as state}]))}, hex-tiles {:name game.play/hex-tiles, :file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/play.cljs", :line 21, :column 1, :end-line 21, :end-column 19, :meta {:file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/play.cljs", :line 21, :column 10, :end-line 21, :end-column 19}}, center-in {:protocol-inline nil, :meta {:file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/play.cljs", :line 180, :column 7, :end-line 180, :end-column 16, :arglists (quote ([big small]))}, :name game.play/center-in, :variadic false, :file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/play.cljs", :end-column 16, :method-params ([big small]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 180, :end-line 180, :max-fixed-arity 2, :fn-var true, :arglists (quote ([big small]))}, show-tiles! {:protocol-inline nil, :meta {:file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/play.cljs", :line 156, :column 7, :end-line 156, :end-column 18, :arglists (quote ([{:keys [tiles stage], :as state}]))}, :name game.play/show-tiles!, :variadic false, :file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/play.cljs", :end-column 18, :method-params ([p__13048]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 156, :end-line 156, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [tiles stage], :as state}]))}, num-conns {:protocol-inline nil, :meta {:file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/play.cljs", :line 118, :column 7, :end-line 118, :end-column 16, :arglists (quote ([tile]))}, :name game.play/num-conns, :variadic false, :file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/play.cljs", :end-column 16, :method-params ([tile]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 118, :end-line 118, :max-fixed-arity 1, :fn-var true, :arglists (quote ([tile]))}, mk-tile {:protocol-inline nil, :meta {:file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/play.cljs", :line 136, :column 7, :end-line 136, :end-column 14, :arglists (quote ([{:keys [tile-type atlas]} tile]))}, :name game.play/mk-tile, :variadic false, :file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/play.cljs", :end-column 14, :method-params ([p__12991 tile]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 136, :end-line 136, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [tile-type atlas]} tile]))}, init-from-level {:protocol-inline nil, :meta {:file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/play.cljs", :line 205, :column 7, :end-line 205, :end-column 22, :arglists (quote ([level-data]))}, :name game.play/init-from-level, :variadic false, :file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/play.cljs", :end-column 22, :method-params ([level-data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 205, :end-line 205, :max-fixed-arity 1, :fn-var true, :arglists (quote ([level-data]))}, pixi {:name game.play/pixi, :file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/play.cljs", :line 13, :column 1, :end-line 13, :end-column 14, :meta {:file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/play.cljs", :line 13, :column 10, :end-line 13, :end-column 14}}, resize {:protocol-inline nil, :meta {:file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/play.cljs", :line 183, :column 7, :end-line 183, :end-column 13, :arglists (quote ([{:keys [width height stage renderer], :as state}]))}, :name game.play/resize, :variadic false, :file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/play.cljs", :end-column 13, :method-params ([p__13083]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 183, :end-line 183, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [width height stage renderer], :as state}]))}, place-tiles! {:protocol-inline nil, :meta {:file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/play.cljs", :line 145, :column 7, :end-line 145, :end-column 19, :arglists (quote ([{:keys [tiles base-unit], :as state}]))}, :name game.play/place-tiles!, :variadic false, :file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/play.cljs", :end-column 19, :method-params ([p__12998]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 145, :end-line 145, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [tiles base-unit], :as state}]))}, board-aspect {:name game.play/board-aspect, :file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/play.cljs", :line 163, :column 1, :end-line 163, :end-column 23, :meta {:file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/play.cljs", :line 163, :column 11, :end-line 163, :end-column 23}}, enter {:protocol-inline nil, :meta {:file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/play.cljs", :line 257, :column 7, :end-line 257, :end-column 12, :arglists (quote ([state]))}, :name game.play/enter, :variadic false, :file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/play.cljs", :end-column 12, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 257, :end-line 257, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, mk-state {:protocol-inline nil, :meta {:file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/play.cljs", :line 285, :column 7, :end-line 285, :end-column 15, :arglists (quote ([]))}, :name game.play/mk-state, :variadic false, :file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/play.cljs", :end-column 15, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 285, :end-line 285, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, leave {:protocol-inline nil, :meta {:file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/play.cljs", :line 280, :column 7, :end-line 280, :end-column 12, :arglists (quote ([state]))}, :name game.play/leave, :variadic false, :file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/play.cljs", :end-column 12, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 280, :end-line 280, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, tile->pixel {:name game.play/tile->pixel, :file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/play.cljs", :line 68, :column 1, :end-line 68, :end-column 22, :meta {:file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/play.cljs", :line 68, :column 11, :end-line 68, :end-column 22}}, touch-fn {:protocol-inline nil, :meta {:file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/play.cljs", :line 32, :column 7, :end-line 32, :end-column 15, :arglists (quote ([e]))}, :name game.play/touch-fn, :variadic false, :file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/play.cljs", :end-column 15, :method-params ([e]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 32, :end-line 32, :max-fixed-arity 1, :fn-var true, :arglists (quote ([e]))}, rotate-tile {:protocol-inline nil, :meta {:file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/play.cljs", :line 45, :column 7, :end-line 45, :end-column 18, :arglists (quote ([tile]))}, :name game.play/rotate-tile, :variadic false, :file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/play.cljs", :end-column 18, :method-params ([tile]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 45, :end-line 45, :max-fixed-arity 1, :fn-var true, :arglists (quote ([tile]))}, nb {:name game.play/nb, :file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/play.cljs", :line 59, :column 1, :end-line 59, :end-column 13, :meta {:file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/play.cljs", :line 59, :column 11, :end-line 59, :end-column 13}}, ttype {:protocol-inline nil, :meta {:file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/play.cljs", :line 56, :column 7, :end-line 56, :end-column 12, :arglists (quote ([{:keys [tile-type]} & stuff])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [({:keys [tile-type]} stuff)], :arglists ([{:keys [tile-type]} & stuff]), :arglists-meta (nil)}}, :name game.play/ttype, :variadic true, :file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/play.cljs", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [({:keys [tile-type]} stuff)], :arglists ([{:keys [tile-type]} & stuff]), :arglists-meta (nil)}, :method-params [({:keys [tile-type]} stuff)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 56, :end-line 56, :max-fixed-arity 1, :fn-var true, :arglists ([{:keys [tile-type]} & stuff])}, base-unit {:name game.play/base-unit, :file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/play.cljs", :line 167, :column 1, :end-line 167, :end-column 20, :meta {:file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/play.cljs", :line 167, :column 11, :end-line 167, :end-column 20}}, exit-level {:protocol-inline nil, :meta {:file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/play.cljs", :line 218, :column 7, :end-line 218, :end-column 17, :arglists (quote ([_]))}, :name game.play/exit-level, :variadic false, :file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/play.cljs", :end-column 17, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 218, :end-line 218, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_]))}, action {:name game.play/action, :file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/play.cljs", :line 222, :column 1, :end-line 222, :end-column 17, :meta {:file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/play.cljs", :line 222, :column 11, :end-line 222, :end-column 17}}, all-neighbors {:protocol-inline nil, :meta {:file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/play.cljs", :line 94, :column 7, :end-line 94, :end-column 20, :arglists (quote ([state {:keys [conn id], :as tile}]))}, :name game.play/all-neighbors, :variadic false, :file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/play.cljs", :end-column 20, :method-params ([state p__12936]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 94, :end-line 94, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state {:keys [conn id], :as tile}]))}}, :require-macros {cljs.core.async.macros cljs.core.async.macros, dommy dommy.core, dommy.core dommy.core, hipo hipo.core, hipo.core hipo.core}, :cljs.analyzer/constants {:seen #{:y :tile-type :r :stage :click1 :won :else :cnv-w :top :#level :moves :default :w :cnv-h :as :portrait :time :atlas :width :start :ortho :disc-sprite :pos :recur :snd :resize :renderer :size :enter :level :click :enter-info :process-evt :leave :click2 :span.view :h :touchstart :id :landscape :base-unit :redraw :rotate :tiles :t :x :click3 :anchor :json :play :draw :time-tick :hierarchy :body :conn-sprite :height :left :conn}, :order [:recur :else :rotate :conn-sprite :disc-sprite :conn :tile-type :hierarchy :default :ortho :width :height :tiles :base-unit :id :x :y :start :size :w :h :anchor :atlas :r :t :pos :stage :redraw :cnv-w :landscape :portrait :renderer :left :top :cnv-h :time :level :as :json :body :play :click1 :click2 :click3 :snd :won :moves :resize :click :touchstart :span.view :#level :enter-info :enter :leave :process-evt :time-tick :draw]}, :doc nil}