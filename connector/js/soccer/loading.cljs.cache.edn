{:use-macros {go cljs.core.async.macros}, :excludes #{}, :name soccer.loading, :imports nil, :requires {hipo hipo.core, hipo.core hipo.core, dommy dommy.core, dommy.core dommy.core, game.assets game.assets, chans game.chans, game.chans game.chans, cljs.core.async cljs.core.async}, :uses {ready? game.assets, percent-done game.assets, >! cljs.core.async}, :defs {enter {:protocol-inline nil, :meta {:file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/loading.cljs", :line 9, :column 7, :end-line 9, :end-column 12, :arglists (quote ([state]))}, :name soccer.loading/enter, :variadic false, :file "src-cljs/game/loading.cljs", :end-column 12, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, exit {:protocol-inline nil, :meta {:file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/loading.cljs", :line 13, :column 7, :end-line 13, :end-column 11, :arglists (quote ([state]))}, :name soccer.loading/exit, :variadic false, :file "src-cljs/game/loading.cljs", :end-column 11, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 13, :end-line 13, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, tick {:protocol-inline nil, :meta {:file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/loading.cljs", :line 17, :column 7, :end-line 17, :end-column 11, :arglists (quote ([state]))}, :name soccer.loading/tick, :variadic false, :file "src-cljs/game/loading.cljs", :end-column 11, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, draw {:protocol-inline nil, :meta {:file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/loading.cljs", :line 23, :column 7, :end-line 23, :end-column 11, :arglists (quote ([state]))}, :name soccer.loading/draw, :variadic false, :file "src-cljs/game/loading.cljs", :end-column 11, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, mk-loading-screen {:protocol-inline nil, :meta {:file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/loading.cljs", :line 26, :column 7, :end-line 26, :end-column 24, :arglists (quote ([]))}, :name soccer.loading/mk-loading-screen, :variadic false, :file "src-cljs/game/loading.cljs", :end-column 24, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 26, :end-line 26, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, mk-state {:protocol-inline nil, :meta {:file "/home/hermann-p/workspace/noodleconnection/game/src-cljs/game/loading.cljs", :line 37, :column 7, :end-line 37, :end-column 15, :arglists (quote ([]))}, :name soccer.loading/mk-state, :variadic false, :file "src-cljs/game/loading.cljs", :end-column 15, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 37, :end-line 37, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {cljs.core.async.macros cljs.core.async.macros, hipo hipo.core, hipo.core hipo.core, dommy dommy.core, dommy.core dommy.core}, :cljs.analyzer/constants {:seen #{:screen :else :top :bar :value :recur :div.selection :enter :leave :span.view :max :id :play :draw :time-tick :progress}, :order [:screen :top :bar :value :play :recur :else :span.view :id :div.selection :progress :max :enter :leave :time-tick :draw]}, :doc nil}