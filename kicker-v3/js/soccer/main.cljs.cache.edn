;; Analyzed by ClojureScript 1.7.145
{:use-macros {go cljs.core.async.macros}, :excludes #{}, :name soccer.main, :imports nil, :requires {play soccer.play, soccer.loading soccer.loading, soccer.pixi soccer.pixi, soccer.channels soccer.channels, soccer.assets soccer.assets, dommy dommy.core, cljs.core.async cljs.core.async, chans soccer.channels, pixi soccer.pixi, soccer.gamestate soccer.gamestate, dommy.core dommy.core, loading soccer.loading, gamestate soccer.gamestate, soccer.play soccer.play}, :uses {load soccer.assets, request soccer.assets, request-all soccer.assets, >! cljs.core.async}, :defs {init {:protocol-inline nil, :meta {:file "/home/hermann-p/workspace/pet-projects/soccer/src-cljs/soccer/main.cljs", :line 12, :column 7, :end-line 12, :end-column 11, :arglists (quote ([]))}, :name soccer.main/init, :variadic false, :file "src-cljs/soccer/main.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, event {:name soccer.main/event, :file "src-cljs/soccer/main.cljs", :line 28, :column 1, :end-line 28, :end-column 16, :meta {:file "/home/hermann-p/workspace/pet-projects/soccer/src-cljs/soccer/main.cljs", :line 28, :column 11, :end-line 28, :end-column 16}}}, :require-macros {cljs.core.async.macros cljs.core.async.macros, dommy dommy.core, dommy.core dommy.core}, :cljs.analyzer/constants {:seen #{:cur-state :hit-ball :ball :sad :else :default :recur :snd :resize :foot :loading :id :url :play :hierarchy :bg :evilos :cheer :img}, :order [:img :snd :id :url :evilos :foot :ball :bg :hit-ball :cheer :sad :resize :recur :else :loading :play :cur-state :hierarchy :default]}, :doc nil}