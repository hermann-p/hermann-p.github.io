;; Analyzed by ClojureScript 1.7.145
{:use-macros {go cljs.core.async.macros}, :excludes #{}, :name soccer.play, :imports nil, :requires {chans soccer.channels, soccer.channels soccer.channels, cljs.core.async cljs.core.async, pixi soccer.pixi, soccer.pixi soccer.pixi, assets soccer.assets, soccer.assets soccer.assets, dommy dommy.core, dommy.core dommy.core}, :uses {set-anchor soccer.pixi, set-size soccer.pixi, mk-sprite soccer.pixi, get-pos soccer.pixi, >! cljs.core.async, update-pos! soccer.pixi, update-sprite! soccer.pixi, set-scale soccer.pixi, set-pos soccer.pixi}, :defs {draw {:protocol-inline nil, :meta {:file "/home/hermann-p/workspace/pet-projects/soccer/src-cljs/soccer/play.cljs", :line 206, :column 7, :end-line 206, :end-column 11, :arglists (quote ([{:keys [renderer stage foot balls], :as game}]))}, :name soccer.play/draw, :variadic false, :file "src-cljs/soccer/play.cljs", :end-column 11, :method-params ([p__55049]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 206, :end-line 206, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [renderer stage foot balls], :as game}]))}, collision {:protocol-inline nil, :meta {:file "/home/hermann-p/workspace/pet-projects/soccer/src-cljs/soccer/play.cljs", :line 34, :column 7, :end-line 34, :end-column 16, :arglists (quote ([{:keys [ball-size foot-size foot]} ball])), :doc "When ball is in range of our foot, set its speed to the position\n  difference vector"}, :name soccer.play/collision, :variadic false, :file "src-cljs/soccer/play.cljs", :end-column 16, :method-params ([p__54766 ball]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 34, :end-line 34, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [ball-size foot-size foot]} ball])), :doc "When ball is in range of our foot, set its speed to the position\n  difference vector"}, remove-entity! {:protocol-inline nil, :meta {:file "/home/hermann-p/workspace/pet-projects/soccer/src-cljs/soccer/play.cljs", :line 67, :column 7, :end-line 67, :end-column 21, :arglists (quote ([{:keys [stage]} {:keys [sprite], :as en}]))}, :name soccer.play/remove-entity!, :variadic false, :file "src-cljs/soccer/play.cljs", :end-column 21, :method-params ([p__54791 p__54792]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 67, :end-line 67, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [stage]} {:keys [sprite], :as en}]))}, score-ball {:protocol-inline nil, :meta {:file "/home/hermann-p/workspace/pet-projects/soccer/src-cljs/soccer/play.cljs", :line 55, :column 7, :end-line 55, :end-column 17, :arglists (quote ([game ball]))}, :name soccer.play/score-ball, :variadic false, :file "src-cljs/soccer/play.cljs", :end-column 17, :method-params ([game ball]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :end-line 55, :max-fixed-arity 2, :fn-var true, :arglists (quote ([game ball]))}, update-pos {:protocol-inline nil, :meta {:file "/home/hermann-p/workspace/pet-projects/soccer/src-cljs/soccer/play.cljs", :line 28, :column 7, :end-line 28, :end-column 17, :arglists (quote ([ball])), :doc "Apply speed vectors to ball"}, :name soccer.play/update-pos, :variadic false, :file "src-cljs/soccer/play.cljs", :end-column 17, :method-params ([ball]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 28, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ball])), :doc "Apply speed vectors to ball"}, dist {:protocol-inline nil, :meta {:file "/home/hermann-p/workspace/pet-projects/soccer/src-cljs/soccer/play.cljs", :line 16, :column 7, :end-line 16, :end-column 11, :arglists (quote ([a b]))}, :name soccer.play/dist, :variadic false, :file "src-cljs/soccer/play.cljs", :end-column 11, :method-params ([a b]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 2, :fn-var true, :arglists (quote ([a b]))}, dt {:name soccer.play/dt, :file "src-cljs/soccer/play.cljs", :line 11, :column 1, :end-line 11, :end-column 12, :meta {:file "/home/hermann-p/workspace/pet-projects/soccer/src-cljs/soccer/play.cljs", :line 11, :column 10, :end-line 11, :end-column 12}}, register-entity! {:protocol-inline nil, :meta {:file "/home/hermann-p/workspace/pet-projects/soccer/src-cljs/soccer/play.cljs", :line 63, :column 7, :end-line 63, :end-column 23, :arglists (quote ([{:keys [stage]} {:keys [sprite], :as en}]))}, :name soccer.play/register-entity!, :variadic false, :file "src-cljs/soccer/play.cljs", :end-column 23, :method-params ([p__54781 p__54782]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 63, :end-line 63, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [stage]} {:keys [sprite], :as en}]))}, resize {:protocol-inline nil, :meta {:file "/home/hermann-p/workspace/pet-projects/soccer/src-cljs/soccer/play.cljs", :line 148, :column 7, :end-line 148, :end-column 13, :arglists (quote ([{:keys [x-tiles stage balls foot], :as game}]))}, :name soccer.play/resize, :variadic false, :file "src-cljs/soccer/play.cljs", :end-column 13, :method-params ([p__54895]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 148, :end-line 148, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [x-tiles stage balls foot], :as game}]))}, enter {:protocol-inline nil, :meta {:file "/home/hermann-p/workspace/pet-projects/soccer/src-cljs/soccer/play.cljs", :line 162, :column 7, :end-line 162, :end-column 12, :arglists (quote ([game]))}, :name soccer.play/enter, :variadic false, :file "src-cljs/soccer/play.cljs", :end-column 12, :method-params ([game]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 162, :end-line 162, :max-fixed-arity 1, :fn-var true, :arglists (quote ([game]))}, time-step {:protocol-inline nil, :meta {:file "/home/hermann-p/workspace/pet-projects/soccer/src-cljs/soccer/play.cljs", :line 132, :column 7, :end-line 132, :end-column 16, :arglists (quote ([{:keys [balls time spawn-intervall], :as game}]))}, :name soccer.play/time-step, :variadic false, :file "src-cljs/soccer/play.cljs", :end-column 16, :method-params ([p__54828]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 132, :end-line 132, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [balls time spawn-intervall], :as game}]))}, mk-state {:protocol-inline nil, :meta {:file "/home/hermann-p/workspace/pet-projects/soccer/src-cljs/soccer/play.cljs", :line 213, :column 7, :end-line 213, :end-column 15, :arglists (quote ([container]))}, :name soccer.play/mk-state, :variadic false, :file "src-cljs/soccer/play.cljs", :end-column 15, :method-params ([container]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 213, :end-line 213, :max-fixed-arity 1, :fn-var true, :arglists (quote ([container]))}, on-screen? {:protocol-inline nil, :meta {:file "/home/hermann-p/workspace/pet-projects/soccer/src-cljs/soccer/play.cljs", :line 49, :column 7, :end-line 49, :end-column 17, :arglists (quote ([{:keys [x-tiles y-tiles], :as game} {:keys [x y], :as ball}])), :doc "Is the ball still visible?"}, :name soccer.play/on-screen?, :variadic false, :file "src-cljs/soccer/play.cljs", :end-column 17, :method-params ([p__54771 p__54772]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 49, :end-line 49, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [x-tiles y-tiles], :as game} {:keys [x y], :as ball}])), :doc "Is the ball still visible?"}, g {:name soccer.play/g, :file "src-cljs/soccer/play.cljs", :line 10, :column 1, :end-line 10, :end-column 11, :meta {:file "/home/hermann-p/workspace/pet-projects/soccer/src-cljs/soccer/play.cljs", :line 10, :column 10, :end-line 10, :end-column 11}}, to-game {:protocol-inline nil, :meta {:file "/home/hermann-p/workspace/pet-projects/soccer/src-cljs/soccer/play.cljs", :line 92, :column 7, :end-line 92, :end-column 14, :arglists (quote ([x y {:keys [x-tiles y-tiles]}]))}, :name soccer.play/to-game, :variadic false, :file "src-cljs/soccer/play.cljs", :end-column 14, :method-params ([x y p__54813]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 92, :end-line 92, :max-fixed-arity 3, :fn-var true, :arglists (quote ([x y {:keys [x-tiles y-tiles]}]))}, leave {:protocol-inline nil, :meta {:file "/home/hermann-p/workspace/pet-projects/soccer/src-cljs/soccer/play.cljs", :line 203, :column 7, :end-line 203, :end-column 12, :arglists (quote ([game]))}, :name soccer.play/leave, :variadic false, :file "src-cljs/soccer/play.cljs", :end-column 12, :method-params ([game]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 203, :end-line 203, :max-fixed-arity 1, :fn-var true, :arglists (quote ([game]))}, apply-gravity {:protocol-inline nil, :meta {:file "/home/hermann-p/workspace/pet-projects/soccer/src-cljs/soccer/play.cljs", :line 23, :column 7, :end-line 23, :end-column 20, :arglists (quote ([ball])), :doc "Add gravity acceleration to y-speed"}, :name soccer.play/apply-gravity, :variadic false, :file "src-cljs/soccer/play.cljs", :end-column 20, :method-params ([ball]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ball])), :doc "Add gravity acceleration to y-speed"}, to-screen {:protocol-inline nil, :meta {:file "/home/hermann-p/workspace/pet-projects/soccer/src-cljs/soccer/play.cljs", :line 85, :column 7, :end-line 85, :end-column 16, :arglists (quote ([x y {:keys [x-tiles y-tiles]}]))}, :name soccer.play/to-screen, :variadic false, :file "src-cljs/soccer/play.cljs", :end-column 16, :method-params ([x y p__54808]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 85, :end-line 85, :max-fixed-arity 3, :fn-var true, :arglists (quote ([x y {:keys [x-tiles y-tiles]}]))}, mk-entity {:protocol-inline nil, :meta {:file "/home/hermann-p/workspace/pet-projects/soccer/src-cljs/soccer/play.cljs", :line 71, :column 7, :end-line 71, :end-column 16, :arglists (quote ([t x y & args])), :top-fn {:variadic true, :max-fixed-arity 3, :method-params [(t x y args)], :arglists ([t x y & args]), :arglists-meta (nil)}}, :name soccer.play/mk-entity, :variadic true, :file "src-cljs/soccer/play.cljs", :end-column 16, :top-fn {:variadic true, :max-fixed-arity 3, :method-params [(t x y args)], :arglists ([t x y & args]), :arglists-meta (nil)}, :method-params [(t x y args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 71, :end-line 71, :max-fixed-arity 3, :fn-var true, :arglists ([t x y & args])}, mk-ball {:protocol-inline nil, :meta {:file "/home/hermann-p/workspace/pet-projects/soccer/src-cljs/soccer/play.cljs", :line 76, :column 7, :end-line 76, :end-column 14, :arglists (quote ([x y r]))}, :name soccer.play/mk-ball, :variadic false, :file "src-cljs/soccer/play.cljs", :end-column 14, :method-params ([x y r]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 76, :end-line 76, :max-fixed-arity 3, :fn-var true, :arglists (quote ([x y r]))}, action {:name soccer.play/action, :file "src-cljs/soccer/play.cljs", :line 102, :column 1, :end-line 102, :end-column 17, :meta {:file "/home/hermann-p/workspace/pet-projects/soccer/src-cljs/soccer/play.cljs", :line 102, :column 11, :end-line 102, :end-column 17}}}, :require-macros {cljs.core.async.macros cljs.core.async.macros, dommy dommy.core, dommy.core dommy.core}, :cljs.analyzer/constants {:seen #{:y :hit-ball :mouseup :display-list :fg-layer :touchmove :ball :sad :stage :else :ball-size :default :enddrag :w :time :balls :width :move :pos :recur :dragging :bg-layer :resize :renderer :size :enter :sprite :x-tiles :foot :add-ball :mousemove :vx :layer :process-evt :leave :vy :h :startdrag :foot-size :spawn-intervall :x :anchor :y-tiles :drag :draw :mousedown :time-tick :hierarchy :bg :cheer :height}, :order [:vy :x :vx :y :ball-size :foot-size :foot :hit-ball :x-tiles :y-tiles :sad :cheer :stage :sprite :pos :ball :size :w :h :anchor :hierarchy :default :startdrag :drag :dragging :enddrag :move :add-ball :balls :layer :fg-layer :time :spawn-intervall :recur :else :width :height :mousedown :mouseup :touchmove :mousemove :display-list :bg-layer :bg :renderer :enter :leave :time-tick :draw :resize :process-evt]}, :doc nil}